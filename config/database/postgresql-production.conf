# PostgreSQL Production Configuration for Rental ML System
# Optimized for high-performance, high-availability production workloads
# This config assumes 8GB RAM server - adjust shared_buffers and other memory settings accordingly

# ================================
# CONNECTION AND AUTHENTICATION
# ================================
listen_addresses = '*'
port = 5432
max_connections = 200
superuser_reserved_connections = 3

# Authentication and SSL
ssl = on
ssl_cert_file = '/etc/ssl/certs/postgresql.crt'
ssl_key_file = '/etc/ssl/private/postgresql.key'
ssl_ca_file = '/etc/ssl/certs/postgresql-ca.crt'
ssl_crl_file = ''
ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'
ssl_prefer_server_ciphers = on
ssl_ecdh_curve = 'prime256v1'
ssl_min_protocol_version = 'TLSv1.2'
ssl_max_protocol_version = 'TLSv1.3'

# Password encryption
password_encryption = scram-sha-256
scram_iterations = 10000

# Connection security
tcp_keepalives_idle = 600
tcp_keepalives_interval = 60
tcp_keepalives_count = 3
tcp_user_timeout = 30000

# ================================
# RESOURCE USAGE (MEMORY)
# ================================
# Memory settings for 8GB server
shared_buffers = 2GB                    # 25% of total RAM
huge_pages = try
temp_buffers = 16MB
max_prepared_transactions = 0
work_mem = 64MB                         # Per operation memory (increase for analytics)
hash_mem_multiplier = 2.0
maintenance_work_mem = 512MB            # For maintenance operations
autovacuum_work_mem = 512MB
max_stack_depth = 2MB
shared_memory_type = mmap
dynamic_shared_memory_type = posix

# Effective cache size (should be ~75% of available RAM)
effective_cache_size = 6GB

# ================================
# RESOURCE USAGE (DISK)
# ================================
temp_file_limit = -1
max_files_per_process = 4000

# ================================
# RESOURCE USAGE (KERNEL RESOURCES)
# ================================
shared_preload_libraries = 'pg_stat_statements,auto_explain,pg_prewarm,pg_cron'
max_worker_processes = 8
max_parallel_workers_per_gather = 4
max_parallel_workers = 8
max_parallel_maintenance_workers = 4
parallel_leader_participation = on

# ================================
# WRITE-AHEAD LOGGING
# ================================
wal_level = replica
fsync = on
synchronous_commit = remote_apply        # For synchronous replication
wal_sync_method = fsync
full_page_writes = on
wal_compression = lz4                    # Compress WAL files
wal_log_hints = on                       # Required for pg_rewind
wal_init_zero = on
wal_recycle = on

# WAL buffer and checkpoint settings
wal_buffers = 64MB                       # 3% of shared_buffers
wal_writer_delay = 200ms
wal_writer_flush_after = 1MB

# Checkpointing (tune for your write workload)
checkpoint_timeout = 15min
checkpoint_completion_target = 0.9
checkpoint_flush_after = 256kB
checkpoint_warning = 30s

# Archive settings for backup
archive_mode = on
archive_command = 'aws s3 cp %p s3://${BACKUP_BUCKET}/wal/%f --region ${AWS_REGION} --sse'
archive_timeout = 300                   # Force archive every 5 minutes

# ================================
# REPLICATION
# ================================
max_wal_senders = 10
max_replication_slots = 10
track_commit_timestamp = on
synchronous_standby_names = 'replica1,replica2'  # Specify your replica names
vacuum_defer_cleanup_age = 0
hot_standby = on
hot_standby_feedback = on
wal_receiver_timeout = 60s
wal_receiver_status_interval = 10s
max_standby_archive_delay = 30s
max_standby_streaming_delay = 30s

# ================================
# QUERY TUNING
# ================================
# Planner Method Configuration
enable_bitmapscan = on
enable_hashagg = on
enable_hashjoin = on
enable_indexscan = on
enable_indexonlyscan = on
enable_material = on
enable_mergejoin = on
enable_nestloop = on
enable_parallel_append = on
enable_parallel_hash = on
enable_partition_pruning = on
enable_partitionwise_join = on
enable_partitionwise_aggregate = on
enable_seqscan = on
enable_sort = on
enable_tidscan = on

# Planner Cost Constants (tuned for SSD)
seq_page_cost = 1.0
random_page_cost = 1.1                  # SSD-optimized (mechanical disk would be 4.0)
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025
parallel_tuple_cost = 0.1
parallel_setup_cost = 1000.0
jit_above_cost = 100000
jit_inline_above_cost = 500000
jit_optimize_above_cost = 500000

# Genetic Query Optimizer
geqo = on
geqo_threshold = 12
geqo_effort = 5
geqo_pool_size = 0
geqo_generations = 0
geqo_selection_bias = 2.0
geqo_seed = 0.0

# Other Planner Options
default_statistics_target = 1000        # Higher for better query plans
constraint_exclusion = partition
cursor_tuple_fraction = 0.1
from_collapse_limit = 8
jit = on
join_collapse_limit = 8
force_parallel_mode = off

# ================================
# REPORTING AND LOGGING
# ================================
log_destination = 'stderr,csvlog'
logging_collector = on
log_directory = '/var/log/postgresql'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_file_mode = 0600
log_rotation_age = 1d
log_rotation_size = 1GB
log_truncate_on_rotation = on

# What to Log
log_min_messages = warning
log_min_error_statement = error
log_min_duration_statement = 1000       # Log queries taking longer than 1 second
debug_print_parse = off
debug_print_rewritten = off
debug_print_plan = off
debug_pretty_print = on
log_checkpoints = on
log_connections = on
log_disconnections = on
log_duration = off
log_error_verbosity = default
log_hostname = off
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h,xid=%x '
log_lock_waits = on
log_statement = 'ddl'
log_replication_commands = on
log_temp_files = 10MB
log_timezone = 'UTC'

# ================================
# PROCESS TITLE
# ================================
cluster_name = 'rental_ml_prod'
update_process_title = on

# ================================
# STATISTICS
# ================================
track_activities = on
track_activity_query_size = 2048
track_counts = on
track_io_timing = on
track_wal_io_timing = on
track_functions = pl
stats_temp_directory = '/var/run/postgresql/stats_temp'
compute_query_id = on

# ================================
# AUTOVACUUM
# ================================
autovacuum = on
log_autovacuum_min_duration = 0
autovacuum_max_workers = 6
autovacuum_naptime = 30s               # More frequent for high-write workload
autovacuum_vacuum_threshold = 50
autovacuum_vacuum_insert_threshold = 1000
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.1   # More aggressive for large tables
autovacuum_vacuum_insert_scale_factor = 0.2
autovacuum_analyze_scale_factor = 0.05 # More frequent analyze
autovacuum_freeze_max_age = 200000000
autovacuum_multixact_freeze_max_age = 400000000
autovacuum_vacuum_cost_delay = 2ms
autovacuum_vacuum_cost_limit = 2000    # Higher limit for faster vacuum

# ================================
# CLIENT CONNECTION DEFAULTS
# ================================
search_path = '"$user", public'
row_security = on
default_table_access_method = 'heap'
default_tablespace = ''
temp_tablespaces = ''
check_function_bodies = on
default_transaction_isolation = 'read committed'
default_transaction_read_only = off
default_transaction_deferrable = off
session_replication_role = 'origin'
statement_timeout = 30000               # 30 seconds
lock_timeout = 10000                    # 10 seconds
idle_in_transaction_session_timeout = 60000  # 1 minute
vacuum_cleanup_index_scale_factor = 0.1

# ================================
# LOCK MANAGEMENT
# ================================
deadlock_timeout = 1s
max_locks_per_transaction = 256         # Higher for complex transactions
max_pred_locks_per_transaction = 256
max_pred_locks_per_relation = -2
max_pred_locks_per_page = 2

# ================================
# VERSION AND PLATFORM COMPATIBILITY
# ================================
array_nulls = on
backslash_quote = safe_encoding
escape_string_warning = on
lo_compat_privileges = off
operator_precedence_warning = off
quote_all_identifiers = off
standard_conforming_strings = on
synchronize_seqscans = on

# ================================
# ERROR HANDLING
# ================================
exit_on_error = off
restart_after_crash = on
data_sync_retry = on

# ================================
# CUSTOMIZED OPTIONS
# ================================
# Extension-specific settings

# pg_stat_statements configuration
pg_stat_statements.max = 10000
pg_stat_statements.track = all
pg_stat_statements.track_utility = on
pg_stat_statements.track_planning = on
pg_stat_statements.save = on

# auto_explain configuration
auto_explain.log_min_duration = 1000
auto_explain.log_analyze = on
auto_explain.log_buffers = on
auto_explain.log_timing = on
auto_explain.log_triggers = on
auto_explain.log_verbose = on
auto_explain.log_nested_statements = on
auto_explain.log_format = json

# pg_prewarm configuration (automatically loads into shared_buffers on startup)
# No specific config needed - loaded via shared_preload_libraries

# pg_cron configuration for scheduling maintenance tasks
cron.database_name = 'rental_ml'

# ================================
# ADDITIONAL PERFORMANCE TUNING
# ================================
# Random page cost for different tablespaces (if using different storage types)
# For SSD storage
default_seq_page_cost = 1.0
default_random_page_cost = 1.1

# For memory-optimized analytics queries
effective_io_concurrency = 200         # For SSD arrays
maintenance_io_concurrency = 100

# Background writer settings
bgwriter_delay = 50ms
bgwriter_lru_maxpages = 1000
bgwriter_lru_multiplier = 10.0
bgwriter_flush_after = 512kB

# Huge pages (requires OS configuration)
huge_pages = try

# Timezone
timezone = 'UTC'
log_timezone = 'UTC'

# Locale
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'

# Default text search configuration
default_text_search_config = 'pg_catalog.english'