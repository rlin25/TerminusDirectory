# Example Terraform variables for AWS deployment
# Copy this file to terraform.tfvars and customize the values

# Basic configuration
aws_region   = "us-west-2"
environment  = "production"
project_name = "rental-ml-system"

# Terraform state configuration
terraform_state_bucket = "rental-ml-terraform-state-prod"

# Domain configuration
domain_name      = "rental-ml.example.com"
route53_zone_id  = "Z1D633PJN98FT9"

# Network configuration
vpc_cidr = "10.0.0.0/16"
private_subnets = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
public_subnets  = ["10.0.101.0/24", "10.0.102.0/24", "10.0.103.0/24"]
database_subnets = ["10.0.201.0/24", "10.0.202.0/24", "10.0.203.0/24"]

# EKS Configuration
cluster_name                         = "rental-ml-prod-cluster"
kubernetes_version                   = "1.27"
node_group_min_size                  = 3
node_group_max_size                  = 50
node_group_desired_size              = 5
node_instance_types                  = ["c5.large", "c5.xlarge", "c5.2xlarge"]
cluster_endpoint_public_access_cidrs = ["0.0.0.0/0"]

# Database Configuration
postgres_version              = "15.4"
rds_instance_class           = "db.r6g.xlarge"
rds_replica_instance_class   = "db.r6g.large"
rds_allocated_storage        = 200
rds_max_allocated_storage    = 2000
database_name                = "rental_ml_prod"
database_username            = "postgres"

# Redis Configuration
redis_version         = "7.0"
redis_node_type      = "cache.r6g.large"
redis_num_nodes      = 3
redis_parameter_group = "default.redis7"

# Security Configuration
allowed_cidr_blocks = ["10.0.0.0/16", "172.16.0.0/12"]

# Monitoring Configuration
cloudwatch_log_retention_days = 90

# Cost Optimization
enable_spot_instances = false
spot_instance_pools   = 2

# Security Features
enable_waf        = true
enable_shield     = false
enable_config     = true
enable_cloudtrail = true
enable_guardduty  = true

# Backup Configuration
backup_retention_period      = 30
enable_cross_region_backup   = true
backup_region               = "us-east-1"

# Performance Configuration
enable_enhanced_monitoring                 = true
performance_insights_retention_period      = 7
enable_cluster_autoscaler                 = true

# ML Workload Configuration
enable_gpu_nodes            = true
gpu_node_instance_types     = ["g4dn.xlarge", "g4dn.2xlarge", "g4dn.4xlarge"]
gpu_node_min_size          = 0
gpu_node_max_size          = 20

# Analytics Configuration
enable_data_lake         = true
enable_kinesis_analytics = true
kinesis_shard_count     = 4

# Notification Configuration
notification_email = "ml-team@example.com"
# slack_webhook_url = "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"

# Feature Flags
feature_flags = {
  enable_monitoring        = true
  enable_logging          = true
  enable_tracing          = true
  enable_service_mesh     = true
  enable_secrets_manager  = true
  enable_parameter_store  = true
  enable_vpc_flow_logs    = true
  enable_network_acls     = true
}

# Cost Allocation Tags
cost_allocation_tags = {
  Department   = "Engineering"
  Team         = "ML-Platform"
  CostCenter   = "ml-infrastructure"
  BillingOwner = "ml-team"
  Project      = "rental-ml-system"
  Environment  = "production"
}