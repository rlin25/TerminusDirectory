---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: rental-ml
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  - port: 9187
    targetPort: 9187
    protocol: TCP
    name: postgres-metrics
  selector:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: postgres
---
# PostgreSQL Headless Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless
  namespace: rental-ml
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: postgres
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: postgres
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: rental-ml
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: redis
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  - port: 9121
    targetPort: 9121
    protocol: TCP
    name: redis-metrics
  selector:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: redis
---
# Redis Headless Service
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  namespace: rental-ml
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: redis
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: redis
---
# Application Service
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: rental-ml
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: app
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: app
---
# Worker Service (for metrics)
apiVersion: v1
kind: Service
metadata:
  name: worker-service
  namespace: rental-ml
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: worker
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9540"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 9540
    targetPort: 9540
    protocol: TCP
    name: celery-metrics
  selector:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: worker
---
# Nginx Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: rental-ml
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: nginx
    app.kubernetes.io/instance: nginx
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9113"
    prometheus.io/path: "/metrics"
spec:
  type: LoadBalancer  # Change to NodePort or ClusterIP based on your setup
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  - port: 9113
    targetPort: 9113
    protocol: TCP
    name: nginx-metrics
  selector:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: nginx
    app.kubernetes.io/instance: nginx
---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: rental-ml
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/instance: prometheus
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/instance: prometheus
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: rental-ml
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/instance: grafana
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/instance: grafana