apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Base resources
resources:
- ../../01-namespace.yaml
- ../../02-rbac.yaml
- ../../03-configmaps.yaml
- ../../04-secrets.yaml
- ../../05-storage.yaml
- ../../06-postgres-deployment.yaml
- ../../07-redis-deployment.yaml
- ../../08-app-deployment.yaml
- ../../09-worker-deployment.yaml
- ../../10-scheduler-deployment.yaml
- ../../11-services.yaml
- ../../12-ingress.yaml
- ../../13-hpa.yaml
- ../../14-network-policies.yaml

# Namespace for staging
namespace: rental-ml-staging

# Common labels for staging
commonLabels:
  environment: staging
  app.kubernetes.io/instance: rental-ml-staging
  tier: staging

# Common annotations for staging
commonAnnotations:
  environment: staging
  testing: "enabled"
  monitoring: "enabled"

# Images to use in staging (similar to production but may use different tags)
images:
- name: rental-ml-system
  newTag: staging-latest
- name: postgres
  newTag: 15-alpine
- name: redis
  newTag: 7-alpine
- name: nginx
  newTag: alpine

# Patches for staging environment (between dev and prod)
patches:
- target:
    kind: Deployment
    name: app
  patch: |
    - op: replace
      path: /spec/replicas
      value: 2
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/memory
      value: "512Mi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/cpu
      value: "250m"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/memory
      value: "2Gi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/cpu
      value: "1000m"

- target:
    kind: Deployment
    name: worker
  patch: |
    - op: replace
      path: /spec/replicas
      value: 2
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/memory
      value: "512Mi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/cpu
      value: "250m"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/memory
      value: "2Gi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/cpu
      value: "1000m"

- target:
    kind: StatefulSet
    name: postgres
  patch: |
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/memory
      value: "512Mi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/cpu
      value: "250m"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/memory
      value: "2Gi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/cpu
      value: "1000m"
    - op: replace
      path: /spec/volumeClaimTemplates/0/spec/resources/requests/storage
      value: "50Gi"

- target:
    kind: StatefulSet
    name: redis
  patch: |
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/memory
      value: "256Mi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/cpu
      value: "100m"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/memory
      value: "1Gi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/cpu
      value: "500m"
    - op: replace
      path: /spec/volumeClaimTemplates/0/spec/resources/requests/storage
      value: "10Gi"

- target:
    kind: HorizontalPodAutoscaler
    name: app-hpa
  patch: |
    - op: replace
      path: /spec/minReplicas
      value: 2
    - op: replace
      path: /spec/maxReplicas
      value: 6
    - op: replace
      path: /spec/metrics/0/resource/target/averageUtilization
      value: 70

- target:
    kind: HorizontalPodAutoscaler
    name: worker-hpa
  patch: |
    - op: replace
      path: /spec/minReplicas
      value: 2
    - op: replace
      path: /spec/maxReplicas
      value: 6
    - op: replace
      path: /spec/metrics/0/resource/target/averageUtilization
      value: 75

- target:
    kind: ConfigMap
    name: rental-ml-app-config
  patch: |
    - op: replace
      path: /data/APP_ENV
      value: "staging"
    - op: replace
      path: /data/LOG_LEVEL
      value: "INFO"
    - op: replace
      path: /data/ENABLE_ML_TRAINING
      value: "true"
    - op: replace
      path: /data/ML_BATCH_SIZE
      value: "32"
    - op: replace
      path: /data/DB_POOL_SIZE
      value: "10"
    - op: replace
      path: /data/DB_MAX_OVERFLOW
      value: "20"
    - op: replace
      path: /data/REDIS_MAX_CONNECTIONS
      value: "20"

- target:
    kind: Ingress
    name: rental-ml-ingress
  patch: |
    - op: replace
      path: /spec/rules/0/host
      value: "staging-api.rental-ml.com"
    - op: replace
      path: /spec/rules/1/host
      value: "staging-monitoring.rental-ml.com"
    - op: replace
      path: /spec/tls/0/hosts/0
      value: "staging-api.rental-ml.com"
    - op: replace
      path: /spec/tls/0/hosts/1
      value: "staging-monitoring.rental-ml.com"

# ConfigMap generators for staging-specific config
configMapGenerator:
- name: rental-ml-staging-config
  literals:
  - ENVIRONMENT=staging
  - TESTING_ENABLED=true
  - LOAD_TESTING_ENABLED=true
  - FEATURE_FLAGS_ENABLED=true
  - CANARY_DEPLOYMENTS=true
  - PERFORMANCE_MONITORING=true

# Secret generators for staging
secretGenerator:
- name: rental-ml-staging-secrets
  literals:
  - staging-api-key=staging_key_789
  - test-token=test_token_012

# Replacements for staging-specific values
replacements:
- source:
    kind: ConfigMap
    name: rental-ml-staging-config
    fieldPath: data.ENVIRONMENT
  targets:
  - select:
      kind: Deployment
    fieldPaths:
    - spec.template.spec.containers.[name=app].env.[name=APP_ENV].value