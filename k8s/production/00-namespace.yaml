apiVersion: v1
kind: Namespace
metadata:
  name: rental-ml-prod
  labels:
    name: rental-ml-prod
    environment: production
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: namespace
    app.kubernetes.io/managed-by: kubernetes
  annotations:
    description: "Production namespace for Rental ML System"
    contact: "ml-team@rental-system.com"
    cost-center: "engineering"
spec:
  finalizers:
    - kubernetes
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: rental-ml-resource-quota
  namespace: rental-ml-prod
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: resource-quota
spec:
  hard:
    # Compute resources
    requests.cpu: "20"
    requests.memory: 40Gi
    limits.cpu: "40"
    limits.memory: 80Gi
    
    # Storage resources
    requests.storage: 1Ti
    persistentvolumeclaims: "20"
    
    # Object counts
    pods: "50"
    services: "20"
    secrets: "20"
    configmaps: "20"
    replicationcontrollers: "0"
    deployments.apps: "20"
    statefulsets.apps: "10"
    jobs.batch: "20"
    cronjobs.batch: "10"
    
    # Network policies
    networkpolicies.networking.k8s.io: "10"
    
    # Service accounts
    serviceaccounts: "10"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: rental-ml-limit-range
  namespace: rental-ml-prod
  labels:
    app.kubernetes.io/name: rental-ml-system
    app.kubernetes.io/component: limit-range
spec:
  limits:
    # Default limits for containers
    - default:
        cpu: "1"
        memory: "2Gi"
      defaultRequest:
        cpu: "100m"
        memory: "256Mi"
      type: Container
    
    # Pod limits
    - max:
        cpu: "8"
        memory: "16Gi"
      min:
        cpu: "10m"
        memory: "64Mi"
      type: Pod
    
    # PVC limits
    - max:
        storage: "100Gi"
      min:
        storage: "1Gi"
      type: PersistentVolumeClaim